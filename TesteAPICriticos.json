{
	"info": {
		"_postman_id": "bf077872-31d8-4755-8a0e-4bc87a7cdd56",
		"name": "APICriticos",
		"description": "## Welcome\n\nThis is a place to put general notes and extra information, for internal use.\n\nTo get started designing/documenting this API, select a version on the left. # Title\nNo Description",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20331182"
	},
	"item": [
		{
			"name": "authentication",
			"item": [
				{
					"name": "Gest session",
					"item": [
						{
							"name": "Create Guest Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"guestSessionId\",  pm.response.json().guest_session_id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let moment = require('moment');\r",
											"let current_timestamp = new Date();\r",
											"let expires_timestamp =  new Date(Date.now() + (3600 * 1000 * 24.1))\r",
											"\r",
											"pm.test(\"Check the timestamp range for expires_at\", function () {\r",
											"    pm.expect(moment( pm.response.json().expires_at ).isBetween(current_timestamp,  expires_timestamp)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authentication/guest_session/new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"guest_session",
										"new"
									]
								},
								"description": "This method will let you create a new guest session. Guest sessions are a type of session that will let a user rate movies and TV shows but not require them to have a TMDB user account. More information about user authentication can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ).\n\nPlease note, you should only generate a single guest session per user (or device) as you will be able to attach the ratings to a TMDB user account in the future. There is also IP limits in place so you should always make sure it's the end user doing the guest session actions.\n\nIf a guest session is not used for the first time within 24 hours, it will be automatically deleted."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/guest_session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"guest_session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"guest_session_id\": \"1ce82ec1223641636ad4a60b07de3581\",\n  \"expires_at\": \"2016-08-27 16:26:40 UTC\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/guest_session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"guest_session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/guest_session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"guest_session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Create Guest Session - Invalid API key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"status_message is Invalid\", function () {\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Invalid API key: You must be granted a valid key.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "554d0886957b2bb0c97320906a46a449",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authentication/guest_session/new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"guest_session",
										"new"
									]
								},
								"description": "This method will let you create a new guest session. Guest sessions are a type of session that will let a user rate movies and TV shows but not require them to have a TMDB user account. More information about user authentication can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ).\n\nPlease note, you should only generate a single guest session per user (or device) as you will be able to attach the ratings to a TMDB user account in the future. There is also IP limits in place so you should always make sure it's the end user doing the guest session actions.\n\nIf a guest session is not used for the first time within 24 hours, it will be automatically deleted."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/guest_session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"guest_session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"guest_session_id\": \"1ce82ec1223641636ad4a60b07de3581\",\n  \"expires_at\": \"2016-08-27 16:26:40 UTC\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/guest_session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"guest_session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/guest_session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"guest_session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						}
					]
				},
				{
					"name": "token",
					"item": [
						{
							"name": "Create Request Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"requestToken\",  pm.response.json().request_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let moment = require('moment');\r",
											"let current_timestamp = new Date();\r",
											"let expires_timestamp =  new Date(Date.now() + (3600 * 1000 * 1.1))\r",
											"\r",
											"pm.test(\"Check the timestamp range for expires_at\", function () {\r",
											"    pm.expect(moment( pm.response.json().expires_at ).isBetween(current_timestamp,  expires_timestamp)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authentication/token/new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"token",
										"new"
									]
								},
								"description": "Create a temporary request token that can be used to validate a TMDB user login. More details about how this works can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/token/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"expires_at\": \"2016-08-26 17:04:39 UTC\",\n  \"request_token\": \"ff5c7eeb5a8870efe3cd7fc5c282cffd26800ecd\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/token/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/token/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Create Request Token - Invalid API Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"status_message is Invalid\", function () {\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Invalid API key: You must be granted a valid key.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "554d0886957b2bb0c97320906a46a449",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authentication/token/new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"token",
										"new"
									]
								},
								"description": "Create a temporary request token that can be used to validate a TMDB user login. More details about how this works can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/token/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"expires_at\": \"2016-08-26 17:04:39 UTC\",\n  \"request_token\": \"ff5c7eeb5a8870efe3cd7fc5c282cffd26800ecd\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/token/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/authentication/token/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Create Session With Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"requestTokenWithLogin\",  pm.response.json().request_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let moment = require('moment');\r",
											"let current_timestamp = new Date();\r",
											"let expires_timestamp =  new Date(Date.now() + (3600 * 1000 * 1.1))\r",
											"\r",
											"pm.test(\"Check the timestamp range for expires_at\", function () {\r",
											"    pm.expect(moment( pm.response.json().expires_at ).isBetween(current_timestamp,  expires_timestamp)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"GeorgeDuarte87\",\n    \"password\": \"Suno123!\",\n    \"request_token\": \"{{requestToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authentication/token/validate_with_login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"token",
										"validate_with_login"
									]
								},
								"description": "This method allows an application to validate a request token by entering a username and password.\n\nNot all applications have access to a web view so this can be used as a substitute.\n\nPlease note, the preferred method of validating a request token is to have a user authenticate the request via the TMDB website. You can read about that method [here](#docTextSection:NSZtgz7zptsiLYxXZ).\n\nIf you decide to use this method please **use HTTPS**."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"expires_at\": \"2018-07-24 04:10:26 UTC\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Create Session With Login  - Invalid User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"status_message is Invalid\", function () {\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Invalid username and/or password: You did not provide a valid login.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"GeorgeDuarte97\",\n    \"password\": \"Suno123!\",\n    \"request_token\": \"{{requestToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authentication/token/validate_with_login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"token",
										"validate_with_login"
									]
								},
								"description": "This method allows an application to validate a request token by entering a username and password.\n\nNot all applications have access to a web view so this can be used as a substitute.\n\nPlease note, the preferred method of validating a request token is to have a user authenticate the request via the TMDB website. You can read about that method [here](#docTextSection:NSZtgz7zptsiLYxXZ).\n\nIf you decide to use this method please **use HTTPS**."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"expires_at\": \"2018-07-24 04:10:26 UTC\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Create Session With Login  - Invalid Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"status_message is Invalid\", function () {\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Invalid username and/or password: You did not provide a valid login.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"GeorgeDuarte87\",\n    \"password\": \"Suno123\",\n    \"request_token\": \"{{requestToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authentication/token/validate_with_login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"token",
										"validate_with_login"
									]
								},
								"description": "This method allows an application to validate a request token by entering a username and password.\n\nNot all applications have access to a web view so this can be used as a substitute.\n\nPlease note, the preferred method of validating a request token is to have a user authenticate the request via the TMDB website. You can read about that method [here](#docTextSection:NSZtgz7zptsiLYxXZ).\n\nIf you decide to use this method please **use HTTPS**."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"expires_at\": \"2018-07-24 04:10:26 UTC\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Create Session With Login - Invalid Request Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"status_message is Invalid\", function () {\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Invalid request token: The request token is either expired or invalid.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"GeorgeDuarte87\",\n    \"password\": \"Suno123!\",\n    \"request_token\": \"5e16e05abb76af8ae84c8500cf3b07f1d52bac20\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authentication/token/validate_with_login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"token",
										"validate_with_login"
									]
								},
								"description": "This method allows an application to validate a request token by entering a username and password.\n\nNot all applications have access to a web view so this can be used as a substitute.\n\nPlease note, the preferred method of validating a request token is to have a user authenticate the request via the TMDB website. You can read about that method [here](#docTextSection:NSZtgz7zptsiLYxXZ).\n\nIf you decide to use this method please **use HTTPS**."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"expires_at\": \"2018-07-24 04:10:26 UTC\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"johnny_appleseed\",\n  \"password\": \"test123\",\n  \"request_token\": \"1531f1a558c8357ce8990cf887ff196e8f5402ec\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/token/validate_with_login?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"token",
												"validate_with_login"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						}
					]
				},
				{
					"name": "session",
					"item": [
						{
							"name": "Delete Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test.skip(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test.skip(\"status for delete session is Invalid\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"session_id\": \"{{sessionId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authentication/session",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"session"
									]
								},
								"description": "If you would like to delete (or \"logout\") from a session, call this method with a valid session ID."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_id\": \"2629f70fb498edc263a0adb99118ac41f0053e8c\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/session?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"session"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_id\": \"2629f70fb498edc263a0adb99118ac41f0053e8c\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/session?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"session"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_id\": \"2629f70fb498edc263a0adb99118ac41f0053e8c\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/session?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"session"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Create Session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"sessionId\",  pm.response.json().session_id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"status for delete session is Invalid\", function () {\r",
											"    pm.expect(pm.response.json().success).to.be.true\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"request_token\": \"{{requestTokenWithLogin}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authentication/session/new?api_key={{apiKey}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authentication",
										"session",
										"new"
									],
									"query": [
										{
											"key": "api_key",
											"value": "{{apiKey}}"
										}
									]
								},
								"description": "You can use this method to create a fully valid session ID once a user has validated the request token. More information about how this works can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request_token\": \"6bc047b88f669d1fb86574f06381005d93d3517a\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true,\n  \"session_id\": \"79191836ddaa0da3df76a5ffef6f07ad6ab0c641\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request_token\": \"6bc047b88f669d1fb86574f06381005d93d3517a\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"request_token\": \"6bc047b88f669d1fb86574f06381005d93d3517a\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authentication/session/new?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authentication",
												"session",
												"new"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "account",
			"item": [
				{
					"name": "{account id}",
					"item": [
						{
							"name": "rated",
							"item": [
								{
									"name": "tv",
									"item": [
										{
											"name": "Get Rated TV Shows",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "api_key",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/rated/tv?session_id={{sessionId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"rated",
														"tv"
													],
													"query": [
														{
															"key": "session_id",
															"value": "{{sessionId}}",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "{{accountId}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Get a list of all the TV shows you have rated."
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/:account_id/rated/tv?session_id=&api_key=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																":account_id",
																"rated",
																"tv"
															],
															"query": [
																{
																	"key": "session_id",
																	"value": ""
																},
																{
																	"key": "api_key",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "-33374586",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"backdrop_path\": null,\n      \"first_air_date\": \"2008-09-09\",\n      \"genre_ids\": [\n        18\n      ],\n      \"id\": 1705,\n      \"original_language\": \"en\",\n      \"original_name\": \"Fringe\",\n      \"overview\": \"Fringe is an American science fiction television series that follows Olivia Dunham, Peter Bishop, and Walter Bishop, members of a Federal Bureau of Investigation \\\"Fringe Division\\\" team based in Boston, Massachusetts under the supervision of Homeland Security. The team uses \\\"fringe\\\" science and FBI investigative techniques to investigate a series of unexplained, often ghastly occurrences, which are related to mysteries surrounding a parallel universe. The series has been described as a hybrid of The X-Files, Altered States, and The Twilight Zone.\",\n      \"origin_country\": [\n        \"US\"\n      ],\n      \"poster_path\": null,\n      \"popularity\": 0.372415,\n      \"name\": \"Fringe\",\n      \"vote_average\": 8.4,\n      \"vote_count\": 46,\n      \"rating\": 9\n    }\n  ],\n  \"total_pages\": 7,\n  \"total_results\": 139\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/:account_id/rated/tv?session_id=&api_key=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																":account_id",
																"rated",
																"tv"
															],
															"query": [
																{
																	"key": "session_id",
																	"value": ""
																},
																{
																	"key": "api_key",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "-33374586",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/:account_id/rated/tv?session_id=&api_key=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																":account_id",
																"rated",
																"tv"
															],
															"query": [
																{
																	"key": "session_id",
																	"value": ""
																},
																{
																	"key": "api_key",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "-33374586",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
												}
											]
										},
										{
											"name": "Get Rated TV Episodes",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "apikey",
													"apikey": [
														{
															"key": "value",
															"value": "{{apiKey}}",
															"type": "string"
														},
														{
															"key": "key",
															"value": "api_key",
															"type": "string"
														},
														{
															"key": "in",
															"value": "query",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/rated/tv/episodes?session_id={{sessionId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"rated",
														"tv",
														"episodes"
													],
													"query": [
														{
															"key": "session_id",
															"value": "{{sessionId}}",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "{{accountId}}",
															"description": "(Required) "
														}
													]
												},
												"description": "Get a list of all the TV episodes you have rated."
											},
											"response": [
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/:account_id/rated/tv/episodes?session_id=&api_key=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																":account_id",
																"rated",
																"tv",
																"episodes"
															],
															"query": [
																{
																	"key": "session_id",
																	"value": ""
																},
																{
																	"key": "api_key",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "ut cillum laborum eu nostrud",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"air_date\": \"2013-10-15\",\n      \"episode_number\": 5,\n      \"id\": 64782,\n      \"name\": \"The Workplace Proximity\",\n      \"overview\": \"Amy starts working at Caltech which causes friction with Sheldon. Howard agrees with Sheldon who mentions this to Bernadette causing a big fight for the Wolowitzes.\",\n      \"production_code\": \"4X5305\",\n      \"season_number\": 7,\n      \"show_id\": 1418,\n      \"still_path\": \"/8gsO10PHQnMO0qqXKN58Dk9bBBm.jpg\",\n      \"vote_average\": 7.583,\n      \"vote_count\": 6,\n      \"rating\": 8\n    },\n    {\n      \"air_date\": \"2013-12-08\",\n      \"episode_number\": 11,\n      \"id\": 968782,\n      \"name\": \"Big Man in Tehran\",\n      \"overview\": \"Brody's loyalty to the mission wavers when he meets a ghost from his past. As Lockhart's confirmation looms, Saul stares into the precipice between success and failure.\",\n      \"production_code\": \"3WAH11\",\n      \"season_number\": 3,\n      \"show_id\": 1407,\n      \"still_path\": \"/3zRlEKCjd5hYtalJtxfdrX5cWqH.jpg\",\n      \"vote_average\": 8.333,\n      \"vote_count\": 6,\n      \"rating\": 9\n    },\n    {\n      \"air_date\": \"2014-03-23\",\n      \"episode_number\": 15,\n      \"id\": 973273,\n      \"name\": \"Dramatics, Your Honor\",\n      \"overview\": \"Alicia asks Cary to be her lawyer when Nelson Dubeck (Eric Bogosian) asks her to participate in a deposition; Will faces off with a new prosecutor while defending Jeffrey Grant (Hunter Parrish).\",\n      \"production_code\": null,\n      \"season_number\": 5,\n      \"show_id\": 1435,\n      \"still_path\": \"/eGQg94nfM6EhKrxGA8A92SXe3WT.jpg\",\n      \"vote_average\": 6.667,\n      \"vote_count\": 3,\n      \"rating\": 9\n    },\n    {\n      \"air_date\": \"2014-05-11\",\n      \"episode_number\": 6,\n      \"id\": 63099,\n      \"name\": \"The Laws of Gods and Men\",\n      \"overview\": \"Stannis and Davos set sail; Dany meets with supplicants; Tyrion faces down his father. \",\n      \"production_code\": \"406\",\n      \"season_number\": 4,\n      \"show_id\": 1399,\n      \"still_path\": \"/vKt9b7HNYhwM91C7S53zPsAWfT3.jpg\",\n      \"vote_average\": 8.885,\n      \"vote_count\": 48,\n      \"rating\": 8.5\n    },\n    {\n      \"air_date\": \"2014-05-18\",\n      \"episode_number\": 7,\n      \"id\": 63100,\n      \"name\": \"Mockingbird\",\n      \"overview\": \"Tyrion gains an unlikely ally; Daario asks Dany to allow him to do what he does best; Jon's warnings about the vulnerability of the Wall are ignored; Brienne follows a new lead. \",\n      \"production_code\": \"407\",\n      \"season_number\": 4,\n      \"show_id\": 1399,\n      \"still_path\": \"/r7u0uELPyDkNnBZzAFVvw1XJKo5.jpg\",\n      \"vote_average\": 8.035,\n      \"vote_count\": 43,\n      \"rating\": 8.5\n    },\n    {\n      \"air_date\": \"2014-06-16\",\n      \"episode_number\": 12,\n      \"id\": 975339,\n      \"name\": \"Tome-wan\",\n      \"overview\": \"Bedelia returns and accepts immunity to testify against Hannibal. Mason Verger plots revenge after learning of Hannibal's manipulations.\",\n      \"production_code\": \"212\",\n      \"season_number\": 2,\n      \"show_id\": 40008,\n      \"still_path\": \"/pYsO5cXmjJGYUZWVDocBI3CIM6.jpg\",\n      \"vote_average\": 8.385,\n      \"vote_count\": 13,\n      \"rating\": 9\n    },\n    {\n      \"air_date\": \"2014-05-23\",\n      \"episode_number\": 13,\n      \"id\": 976285,\n      \"name\": \"Mizumono\",\n      \"overview\": \"Springing their trap, Jack, Will and Alana face off with Hannibal in a bloody final showdown, but the doctor has a few surprises of his own.\",\n      \"production_code\": \"213\",\n      \"season_number\": 2,\n      \"show_id\": 40008,\n      \"still_path\": \"/40jqX3XRk6W97gscX5rj4kTy411.jpg\",\n      \"vote_average\": 9.105,\n      \"vote_count\": 19,\n      \"rating\": 10\n    },\n    {\n      \"air_date\": \"2014-06-01\",\n      \"episode_number\": 8,\n      \"id\": 63101,\n      \"name\": \"The Mountain and the Viper\",\n      \"overview\": \"Unexpected visitors arrive in Mole's Town. Littlefinger's motives are questioned. Ramsay tries to prove himself to his father. Tyrion's fate is decided.\",\n      \"production_code\": \"408\",\n      \"season_number\": 4,\n      \"show_id\": 1399,\n      \"still_path\": \"/B5ttTcMjq7YzgKcCzhb6ggJT03.jpg\",\n      \"vote_average\": 8.654,\n      \"vote_count\": 52,\n      \"rating\": 9.5\n    },\n    {\n      \"air_date\": \"2013-09-29\",\n      \"episode_number\": 16,\n      \"id\": 62161,\n      \"name\": \"Felina\",\n      \"overview\": \"All bad things must come to an end.\",\n      \"production_code\": null,\n      \"season_number\": 5,\n      \"show_id\": 1396,\n      \"still_path\": \"/pA0YwyhvdDXP3BEGL2grrIhq8aM.jpg\",\n      \"vote_average\": 8.805,\n      \"vote_count\": 41,\n      \"rating\": 9\n    },\n    {\n      \"air_date\": \"2014-07-13\",\n      \"episode_number\": 1,\n      \"id\": 989249,\n      \"name\": \"Night Zero\",\n      \"overview\": \"When a plane lands in New York City with everyone on board dead, Dr. Ephraim Goodweather, head of the CDC’s Canary Project, and his team are called upon to investigate. Harlem pawnbroker Abraham Setrakian races to the airport, convinced that what looks at first like a mysterious viral outbreak might be the beginning of something infinitely more sinister.\",\n      \"production_code\": \"XSN01001\",\n      \"season_number\": 1,\n      \"show_id\": 47640,\n      \"still_path\": \"/hNvvXGRszkgQXVUDnK2EIMXcD0t.jpg\",\n      \"vote_average\": 7.643,\n      \"vote_count\": 7,\n      \"rating\": 7.5\n    },\n    {\n      \"air_date\": \"2014-06-19\",\n      \"episode_number\": 1,\n      \"id\": 976915,\n      \"name\": \"Running with the Bull\",\n      \"overview\": \"Daniel’s family fears he won’t recover from his injuries and his attackers will escape justice. Judy Dean shows Bobby some unexpected affection. Ted, Jr. hides a shameful secret from his wife. Sheriff Daggett investigates Daniel’s beating.\",\n      \"production_code\": null,\n      \"season_number\": 2,\n      \"show_id\": 46619,\n      \"still_path\": \"/yzH8iOxLAGgwDcXehUM0O8sTolo.jpg\",\n      \"vote_average\": 9.667,\n      \"vote_count\": 3,\n      \"rating\": 9\n    },\n    {\n      \"air_date\": \"2014-08-24\",\n      \"episode_number\": 9,\n      \"id\": 990362,\n      \"name\": \"The Garveys at Their Best\",\n      \"overview\": \"Kevin tries to suppress his bad habits while tracking down a marauding deer in Mapleton. Laurie receives not-unexpected news amidst a rising sense of foreboding. Tom connects with his past, against his better judgment. Nora has a job interview; Kevin Senior receives an honor.\",\n      \"production_code\": \"4X5709\",\n      \"season_number\": 1,\n      \"show_id\": 54344,\n      \"still_path\": \"/gGLWdy0ac2OryUwfGd3y0TiHTpD.jpg\",\n      \"vote_average\": 8.857,\n      \"vote_count\": 7,\n      \"rating\": 9\n    },\n    {\n      \"air_date\": \"2012-07-15\",\n      \"episode_number\": 1,\n      \"id\": 62147,\n      \"name\": \"Live Free or Die\",\n      \"overview\": \"As Walt deals with the aftermath of the Casa Tranquila explosion, Hank works to wrap up his investigation of Gus' empire.\",\n      \"production_code\": null,\n      \"season_number\": 5,\n      \"show_id\": 1396,\n      \"still_path\": \"/uShB5dWoA3xIivZ9jvwWnGCVvt4.jpg\",\n      \"vote_average\": 7.692,\n      \"vote_count\": 26,\n      \"rating\": 8\n    },\n    {\n      \"air_date\": \"2012-08-26\",\n      \"episode_number\": 7,\n      \"id\": 62153,\n      \"name\": \"Say My Name\",\n      \"overview\": \"Walt takes control of business matters; Mike deals with the consequences of his actions.\",\n      \"production_code\": null,\n      \"season_number\": 5,\n      \"show_id\": 1396,\n      \"still_path\": \"/2NA7ti9jsWnG4xreMEFwbq4DH1f.jpg\",\n      \"vote_average\": 8.1,\n      \"vote_count\": 25,\n      \"rating\": 8.5\n    },\n    {\n      \"air_date\": \"2015-03-01\",\n      \"episode_number\": 1,\n      \"id\": 1022053,\n      \"name\": \"The Battle Creek Way\",\n      \"overview\": \"Jaded Det. Russ Agnew reluctantly partners with charming FBI Agent Milt Chamberlain to solve a drug-related double homicide, but while Milt investigates with the high-tech resources of the FBI, Russ prefers old-school police work and instinct.\",\n      \"production_code\": \"101\",\n      \"season_number\": 1,\n      \"show_id\": 61676,\n      \"still_path\": \"/3WhjGuI9AD2OXF40hntDJbWC6Sp.jpg\",\n      \"vote_average\": 7.5,\n      \"vote_count\": 2,\n      \"rating\": 8\n    },\n    {\n      \"air_date\": \"2015-02-23\",\n      \"episode_number\": 16,\n      \"id\": 1039439,\n      \"name\": \"The Wrong Stuff\",\n      \"overview\": \"When an astronaut, training for a trip to Mars, is mysteriously killed inside a Mars simulation, Castle and Beckett don spacesuits to investigate. But when they discover no one inside the sealed simulation could have committed the murder and no one from the outside could get in, the case takes a shocking turn\",\n      \"production_code\": \"716\",\n      \"season_number\": 7,\n      \"show_id\": 1419,\n      \"still_path\": \"/kg0beAZYaaLVsP3mMxVnwDcG1f8.jpg\",\n      \"vote_average\": 8,\n      \"vote_count\": 4,\n      \"rating\": 8\n    },\n    {\n      \"air_date\": \"2015-04-10\",\n      \"episode_number\": 13,\n      \"id\": 1036361,\n      \"name\": \"Daredevil\",\n      \"overview\": \"In the season finale, a boxed-in Fisk and a desperate Murdock, Foggy and Karen are forced to play their end games.\",\n      \"production_code\": null,\n      \"season_number\": 1,\n      \"show_id\": 61889,\n      \"still_path\": \"/nSCJMlJkGULVKHuisKeH9Crguy8.jpg\",\n      \"vote_average\": 7.64,\n      \"vote_count\": 25,\n      \"rating\": 9.5\n    },\n    {\n      \"air_date\": \"2015-03-20\",\n      \"episode_number\": 1,\n      \"id\": 1040171,\n      \"name\": \"Part 1\",\n      \"overview\": \"Trouble starts when oldest son Danny Rayburn comes home for the 45th anniversary celebration of his parents' hotel in the Florida Keys' Islamorada.\",\n      \"production_code\": null,\n      \"season_number\": 1,\n      \"show_id\": 61986,\n      \"still_path\": \"/k9dcZnv7tHeGZF6LWBVdzm4B3E3.jpg\",\n      \"vote_average\": 7.7,\n      \"vote_count\": 5,\n      \"rating\": 8.5\n    },\n    {\n      \"air_date\": \"2015-05-31\",\n      \"episode_number\": 8,\n      \"id\": 1070282,\n      \"name\": \"Hardhome\",\n      \"overview\": \"Arya makes progress in her training. Sansa confronts an old friend. Cersei struggles. Jon travels.\",\n      \"production_code\": \"508\",\n      \"season_number\": 5,\n      \"show_id\": 1399,\n      \"still_path\": \"/zIrSrXU4zOArlVYnXFxxfKDYYY2.jpg\",\n      \"vote_average\": 9.21,\n      \"vote_count\": 69,\n      \"rating\": 10\n    },\n    {\n      \"air_date\": \"2011-04-17\",\n      \"episode_number\": 1,\n      \"id\": 63056,\n      \"name\": \"Winter Is Coming\",\n      \"overview\": \"Jon Arryn, the Hand of the King, is dead. King Robert Baratheon plans to ask his oldest friend, Eddard Stark, to take Jon's place. Across the sea, Viserys Targaryen plans to wed his sister to a nomadic warlord in exchange for an army.\",\n      \"production_code\": \"101\",\n      \"season_number\": 1,\n      \"show_id\": 1399,\n      \"still_path\": \"/wrGWeW4WKxnaeA8sxJb2T9O6ryo.jpg\",\n      \"vote_average\": 7.413,\n      \"vote_count\": 104,\n      \"rating\": 9\n    }\n  ],\n  \"total_pages\": 8,\n  \"total_results\": 152\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/:account_id/rated/tv/episodes?session_id=&api_key=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																":account_id",
																"rated",
																"tv",
																"episodes"
															],
															"query": [
																{
																	"key": "session_id",
																	"value": ""
																},
																{
																	"key": "api_key",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "ut cillum laborum eu nostrud",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
												},
												{
													"name": "Untitled Example",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/account/:account_id/rated/tv/episodes?session_id=&api_key=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"account",
																":account_id",
																"rated",
																"tv",
																"episodes"
															],
															"query": [
																{
																	"key": "session_id",
																	"value": ""
																},
																{
																	"key": "api_key",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "ut cillum laborum eu nostrud",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Rated Movies",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/rated/movies?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"rated",
												"movies"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a list of all the movies you have rated."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/rated/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"rated",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"adult\": false,\n      \"backdrop_path\": null,\n      \"genre_ids\": [\n        28\n      ],\n      \"id\": 155,\n      \"original_language\": \"en\",\n      \"original_title\": \"The Dark Knight\",\n      \"overview\": \"Batman raises the stakes in his war on crime. With the help of Lt. Jim Gordon and District Attorney Harvey Dent, Batman sets out to dismantle the remaining criminal organizations that plague the streets. The partnership proves to be effective, but they soon find themselves prey to a reign of chaos unleashed by a rising criminal mastermind known to the terrified citizens of Gotham as the Joker.\",\n      \"release_date\": \"2008-07-18\",\n      \"poster_path\": null,\n      \"popularity\": 0.293783,\n      \"title\": \"The Dark Knight\",\n      \"video\": false,\n      \"vote_average\": 7.9,\n      \"vote_count\": 5504,\n      \"rating\": 9\n    }\n  ],\n  \"total_pages\": 31,\n  \"total_results\": 605\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/rated/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"rated",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/rated/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"rated",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								}
							]
						},
						{
							"name": "watchlist",
							"item": [
								{
									"name": "Add to Watchlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(1);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"Success.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_type\": \"tv\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"watchlist"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Add a movie or TV show to your watchlist."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Add to Watchlist Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(12);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was updated successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_type\": \"tv\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"watchlist"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Add a movie or TV show to your watchlist."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Remove to Watchlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(13);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was deleted successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_type\": \"tv\",\n  \"media_id\": 11,\n  \"watchlist\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"watchlist"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Add a movie or TV show to your watchlist."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 11,\n  \"watchlist\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Get Movie Watchlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"validate page result\", function () {\r",
													"    pm.expect(pm.response.json().page).to.eql(1);\r",
													"    pm.expect(pm.response.json().total_pages).to.eql(1);\r",
													"    //pm.expect(pm.response.json().total_results).to.eql(3);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/watchlist/movies?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"watchlist",
												"movies"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a list of all the movies you have added to your watchlist."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"adult\": false,\n      \"backdrop_path\": null,\n      \"genre_ids\": [\n        18\n      ],\n      \"id\": 76726,\n      \"original_language\": \"it\",\n      \"original_title\": \"Chronicle\",\n      \"overview\": \"Three high school students make an incredible discovery, leading to their developing uncanny powers beyond their understanding. As they learn to control their abilities and use them to their advantage, their lives start to spin out of control, and their darker sides begin to take over.\",\n      \"release_date\": \"2012-02-02\",\n      \"poster_path\": null,\n      \"popularity\": 0.237951,\n      \"title\": \"Chronicle\",\n      \"video\": false,\n      \"vote_average\": 6.2,\n      \"vote_count\": 545\n    }\n  ],\n  \"total_pages\": 14,\n  \"total_results\": 277\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Get TV Show Watchlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"validate page result\", function () {\r",
													"    pm.expect(pm.response.json().page).to.eql(1);\r",
													"    pm.expect(pm.response.json().total_pages).to.eql(0);\r",
													"    pm.expect(pm.response.json().total_results).to.eql(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/watchlist/tv?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"watchlist",
												"tv"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get a list of all the TV shows you have added to your watchlist."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist/tv?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist",
														"tv"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"backdrop_path\": null,\n      \"first_air_date\": \"2013-09-26\",\n      \"genre_ids\": [\n        35\n      ],\n      \"id\": 58932,\n      \"original_language\": \"en\",\n      \"original_name\": \"The Crazy Ones\",\n      \"overview\": \"The Crazy Ones is an American situation comedy series created by David E. Kelley that stars Robin Williams and Sarah Michelle Gellar. The single-camera project premiered on CBS on September 26, 2013, as part of the 2013–14 American television season as a Thursday night 9 pm entry. Bill D'Elia, Dean Lorey, Jason Winer, John Montgomery and Mark Teitelbaum serve as executive producers for 20th Century Fox Television.\",\n      \"origin_country\": [\n        \"US\"\n      ],\n      \"poster_path\": null,\n      \"popularity\": 0.075407,\n      \"name\": \"The Crazy Ones\",\n      \"vote_average\": 5.3,\n      \"vote_count\": 4\n    }\n  ],\n  \"total_pages\": 4,\n  \"total_results\": 64\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist/tv?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist",
														"tv"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/watchlist/tv?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"watchlist",
														"tv"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								}
							]
						},
						{
							"name": "favorite",
							"item": [
								{
									"name": "Mark as Favorite Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(12);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was updated successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 286217,\n  \"favorite\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/favorite?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"favorite"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "This method allows you to mark a movie or TV show as a favorite item."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Remove as Favorite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(13);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was deleted successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 286217,\n  \"favorite\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/favorite?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"favorite"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "This method allows you to mark a movie or TV show as a favorite item."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Mark as Favorite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(1);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"Success.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 286217,\n  \"favorite\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/favorite?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"favorite"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "This method allows you to mark a movie or TV show as a favorite item."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"media_type\": \"movie\",\n  \"media_id\": 550,\n  \"favorite\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Get Favorite Movies",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"validate Movie name\", function () {\r",
													"    pm.expect(pm.response.json().results[0].original_title).to.eql(\"The Martian\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/favorite/movies?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"favorite",
												"movies"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get the list of your favorite movies."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"adult\": false,\n      \"backdrop_path\": null,\n      \"genre_ids\": [\n        16\n      ],\n      \"id\": 9806,\n      \"original_language\": \"en\",\n      \"original_title\": \"The Incredibles\",\n      \"overview\": \"Bob Parr has given up his superhero days to log in time as an insurance adjuster and raise his three children with his formerly heroic wife in suburbia. But when he receives a mysterious assignment, it's time to get back into costume.\",\n      \"release_date\": \"2004-11-04\",\n      \"poster_path\": null,\n      \"popularity\": 0.167525,\n      \"title\": \"The Incredibles\",\n      \"video\": false,\n      \"vote_average\": 6.8,\n      \"vote_count\": 1584\n    }\n  ],\n  \"total_pages\": 4,\n  \"total_results\": 77\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite/movies?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite",
														"movies"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Get Favorite TV Shows",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"validate TV name\", function () {\r",
													"    pm.expect(pm.response.json().results[0].original_name).to.eql(\"For All Mankind\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/favorite/tv?session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"favorite",
												"tv"
											],
											"query": [
												{
													"key": "session_id",
													"value": "{{sessionId}}",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "{{accountId}}",
													"description": "(Required) "
												}
											]
										},
										"description": "Get the list of your favorite TV shows."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite/tv?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite",
														"tv"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"backdrop_path\": null,\n      \"first_air_date\": \"2007-09-24\",\n      \"genre_ids\": [\n        10759\n      ],\n      \"id\": 1404,\n      \"original_language\": \"en\",\n      \"original_name\": \"Chuck\",\n      \"overview\": \"Chuck is an American action-comedy/spy-drama television series created by Josh Schwartz and Chris Fedak. The series is about an \\\"average computer-whiz-next-door\\\" named Chuck, played by Zachary Levi, who receives an encoded e-mail from an old college friend now working for the Central Intelligence Agency; the message embeds the only remaining copy of a software program containing the United States' greatest spy secrets into Chuck's brain.\",\n      \"origin_country\": [\n        \"US\"\n      ],\n      \"poster_path\": null,\n      \"popularity\": 0.125125,\n      \"name\": \"Chuck\",\n      \"vote_average\": 8.2,\n      \"vote_count\": 37\n    }\n  ],\n  \"total_pages\": 3,\n  \"total_results\": 52\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite/tv?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite",
														"tv"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:account_id/favorite/tv?session_id=&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":account_id",
														"favorite",
														"tv"
													],
													"query": [
														{
															"key": "session_id",
															"value": ""
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Created Lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"validate page result\", function () {\r",
											"    pm.expect(pm.response.json().page).to.eql(1);\r",
											"    //pm.expect(pm.response.json().total_pages).to.eql(1);\r",
											"    //pm.expect(pm.response.json().total_results).to.eql(3);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/:account_id/lists?session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										":account_id",
										"lists"
									],
									"query": [
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "{{accountId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get all of the lists created by an account. Will invlude private lists if you are the owner."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/lists?api_key=ut cillum laborum eu nostrud&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"lists"
											],
											"query": [
												{
													"key": "api_key",
													"value": "ut cillum laborum eu nostrud"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "-33374586",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"description\": \"Name pretty much says it all, here's the top 50 grossing films of all time.\",\n      \"favorite_count\": 0,\n      \"id\": 10,\n      \"item_count\": 0,\n      \"iso_639_1\": \"en\",\n      \"list_type\": \"movie\",\n      \"name\": \"Top 50 Grossing Films of All Time (Worldwide)\",\n      \"poster_path\": null\n    }\n  ],\n  \"total_pages\": 4,\n  \"total_results\": 61\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/lists?api_key=ut cillum laborum eu nostrud&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"lists"
											],
											"query": [
												{
													"key": "api_key",
													"value": "ut cillum laborum eu nostrud"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "-33374586",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/lists?api_key=ut cillum laborum eu nostrud&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"lists"
											],
											"query": [
												{
													"key": "api_key",
													"value": "ut cillum laborum eu nostrud"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "-33374586",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Get Created Lists - accountId invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"validate response success, status_code and status_message\", function () {\r",
											"    pm.expect(pm.response.json().success).to.false;\r",
											"    pm.expect(pm.response.json().status_code).to.eql(3);\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Authentication failed: You do not have permissions to access the service.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/:account_id/lists?session_id=c4717a3dbc09782be320106fb4ff8bf0607eaa81",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										":account_id",
										"lists"
									],
									"query": [
										{
											"key": "session_id",
											"value": "c4717a3dbc09782be320106fb4ff8bf0607eaa81",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "14034807000",
											"description": "(Required) "
										}
									]
								},
								"description": "Get all of the lists created by an account. Will invlude private lists if you are the owner."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/lists?api_key=ut cillum laborum eu nostrud&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"lists"
											],
											"query": [
												{
													"key": "api_key",
													"value": "ut cillum laborum eu nostrud"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "-33374586",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"page\": 1,\n  \"results\": [\n    {\n      \"description\": \"Name pretty much says it all, here's the top 50 grossing films of all time.\",\n      \"favorite_count\": 0,\n      \"id\": 10,\n      \"item_count\": 0,\n      \"iso_639_1\": \"en\",\n      \"list_type\": \"movie\",\n      \"name\": \"Top 50 Grossing Films of All Time (Worldwide)\",\n      \"poster_path\": null\n    }\n  ],\n  \"total_pages\": 4,\n  \"total_results\": 61\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/lists?api_key=ut cillum laborum eu nostrud&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"lists"
											],
											"query": [
												{
													"key": "api_key",
													"value": "ut cillum laborum eu nostrud"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "-33374586",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:account_id/lists?api_key=ut cillum laborum eu nostrud&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":account_id",
												"lists"
											],
											"query": [
												{
													"key": "api_key",
													"value": "ut cillum laborum eu nostrud"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "-33374586",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"accountId\",  pm.response.json().id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"validate response success, status_code and status_message\", function () {\r",
									"    pm.expect(pm.response.json().include_adult).to.false;\r",
									"    pm.expect(pm.response.json().id).to.eql(14034806);\r",
									"    pm.expect(pm.response.json().username).to.eql(\"GeorgeDuarte87\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/account?session_id={{sessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							],
							"query": [
								{
									"key": "session_id",
									"value": "{{sessionId}}",
									"description": "(Required) "
								}
							]
						},
						"description": "Get your account details."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"avatar\": {\n    \"gravatar\": {\n      \"hash\": \"c9e9fc152ee756a900db85757c29815d\"\n    }\n  },\n  \"id\": 548,\n  \"iso_639_1\": \"en\",\n  \"iso_3166_1\": \"CA\",\n  \"name\": \"Travis Bell\",\n  \"include_adult\": true,\n  \"username\": \"travisbell\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
						}
					]
				},
				{
					"name": "Get Details - Authentication failed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"accountId\",  pm.response.json().id);\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"validate response success, status_code and status_message\", function () {\r",
									"    pm.expect(pm.response.json().success).to.false;\r",
									"    pm.expect(pm.response.json().status_code).to.eql(3);\r",
									"    pm.expect(pm.response.json().status_message).to.eql(\"Authentication failed: You do not have permissions to access the service.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/account?session_id=c4717a3dbc09782be320106fb4ff8bf0607eaa81",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							],
							"query": [
								{
									"key": "session_id",
									"value": "c4717a3dbc09782be320106fb4ff8bf0607eaa81",
									"description": "(Required) "
								}
							]
						},
						"description": "Get your account details."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"avatar\": {\n    \"gravatar\": {\n      \"hash\": \"c9e9fc152ee756a900db85757c29815d\"\n    }\n  },\n  \"id\": 548,\n  \"iso_639_1\": \"en\",\n  \"iso_3166_1\": \"CA\",\n  \"name\": \"Travis Bell\",\n  \"include_adult\": true,\n  \"username\": \"travisbell\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
						}
					]
				}
			]
		},
		{
			"name": "tv",
			"item": [
				{
					"name": "{tv id}",
					"item": [
						{
							"name": "rating",
							"item": [
								{
									"name": "Rate TV Show",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(1);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"Success.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": 8.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tv",
												":tv_id",
												"rating"
											],
											"query": [
												{
													"key": "guest_session_id",
													"value": "{{guestSessionId}}"
												},
												{
													"key": "session_id",
													"value": "{{sessionId}}"
												}
											],
											"variable": [
												{
													"key": "tv_id",
													"value": "85552",
													"description": "(Required) "
												}
											]
										},
										"description": "Rate a TV show.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Rate TV Show Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test.skip(\"status_message is Invalid\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(12);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was updated successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": 8.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tv",
												":tv_id",
												"rating"
											],
											"query": [
												{
													"key": "guest_session_id",
													"value": "{{guestSessionId}}"
												},
												{
													"key": "session_id",
													"value": "{{sessionId}}"
												}
											],
											"variable": [
												{
													"key": "tv_id",
													"value": "85552",
													"description": "(Required) "
												}
											]
										},
										"description": "Rate a TV show.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Delete Rating",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status_message is Invalid\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(13);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was deleted successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tv",
												":tv_id",
												"rating"
											],
											"query": [
												{
													"key": "guest_session_id",
													"value": "{{guestSessionId}}"
												},
												{
													"key": "session_id",
													"value": "{{sessionId}}"
												}
											],
											"variable": [
												{
													"key": "tv_id",
													"value": "85552",
													"description": "(Required) "
												}
											]
										},
										"description": "Remove your rating for a TV show.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 13,\n  \"status_message\": \"The item/record was deleted successfully.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tv/:tv_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tv",
														":tv_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "tv_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "season/{season number}",
							"item": [
								{
									"name": "episode/{episode number}",
									"item": [
										{
											"name": "rating",
											"item": [
												{
													"name": "Rate TV Episode",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {\r",
																	"    pm.response.to.have.status(201);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"validate response success, status_code and status_message\", function () {\r",
																	"    pm.expect(pm.response.json().success).to.true;\r",
																	"    pm.expect(pm.response.json().status_code).to.eql(1);\r",
																	"    pm.expect(pm.response.json().status_message).to.eql(\"Success.\");\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "value",
																	"value": "{{apiKey}}",
																	"type": "string"
																},
																{
																	"key": "key",
																	"value": "api_key",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "query",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": 8.5\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tv",
																":tv_id",
																"season",
																":season_number",
																"episode",
																":episode_number",
																"rating"
															],
															"query": [
																{
																	"key": "guest_session_id",
																	"value": "{{guestSessionId}}"
																},
																{
																	"key": "session_id",
																	"value": "{{sessionId}}"
																}
															],
															"variable": [
																{
																	"key": "tv_id",
																	"value": "85552",
																	"description": "(Required) "
																},
																{
																	"key": "season_number",
																	"value": "2",
																	"description": "(Required) "
																},
																{
																	"key": "episode_number",
																	"value": "2",
																	"description": "(Required) "
																}
															]
														},
														"description": "Rate a TV episode.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
														}
													]
												},
												{
													"name": "Rate TV Episode Updated",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {\r",
																	"    pm.response.to.have.status(201);\r",
																	"});\r",
																	"\r",
																	"pm.test.skip(\"status_message is Invalid\", function () {\r",
																	"    pm.expect(pm.response.json().success).to.true;\r",
																	"    pm.expect(pm.response.json().status_code).to.eql(12);\r",
																	"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was updated successfully.\");\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "value",
																	"value": "{{apiKey}}",
																	"type": "string"
																},
																{
																	"key": "key",
																	"value": "api_key",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "query",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"value\": 8.5\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tv",
																":tv_id",
																"season",
																":season_number",
																"episode",
																":episode_number",
																"rating"
															],
															"query": [
																{
																	"key": "guest_session_id",
																	"value": "{{guestSessionId}}"
																},
																{
																	"key": "session_id",
																	"value": "{{sessionId}}"
																}
															],
															"variable": [
																{
																	"key": "tv_id",
																	"value": "85552",
																	"description": "(Required) "
																},
																{
																	"key": "season_number",
																	"value": "2",
																	"description": "(Required) "
																},
																{
																	"key": "episode_number",
																	"value": "2",
																	"description": "(Required) "
																}
															]
														},
														"description": "Rate a TV episode.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
														}
													]
												},
												{
													"name": "Delete Rating",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"status_message is Invalid\", function () {\r",
																	"    pm.expect(pm.response.json().success).to.true;\r",
																	"    pm.expect(pm.response.json().status_code).to.eql(13);\r",
																	"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was deleted successfully.\");\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"auth": {
															"type": "apikey",
															"apikey": [
																{
																	"key": "value",
																	"value": "{{apiKey}}",
																	"type": "string"
																},
																{
																	"key": "key",
																	"value": "api_key",
																	"type": "string"
																},
																{
																	"key": "in",
																	"value": "query",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"tv",
																":tv_id",
																"season",
																":season_number",
																"episode",
																":episode_number",
																"rating"
															],
															"query": [
																{
																	"key": "guest_session_id",
																	"value": "{{guestSessionId}}"
																},
																{
																	"key": "session_id",
																	"value": "{{sessionId}}"
																}
															],
															"variable": [
																{
																	"key": "tv_id",
																	"value": "85552",
																	"description": "(Required) "
																},
																{
																	"key": "season_number",
																	"value": "2",
																	"description": "(Required) "
																},
																{
																	"key": "episode_number",
																	"value": "2",
																	"description": "(Required) "
																}
															]
														},
														"description": "Remove your rating for a TV episode.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
													},
													"response": [
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_code\": 13,\n  \"status_message\": \"The item/record was deleted successfully.\"\n}"
														},
														{
															"name": "Untitled Example",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "(Required) ",
																		"key": "Content-Type",
																		"value": "application/json;charset=utf-8"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/tv/:tv_id/season/:season_number/episode/:episode_number/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"tv",
																		":tv_id",
																		"season",
																		":season_number",
																		"episode",
																		":episode_number",
																		"rating"
																	],
																	"query": [
																		{
																			"key": "guest_session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "session_id",
																			"value": "ut cillum laborum eu nostrud"
																		},
																		{
																			"key": "api_key",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "tv_id",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "season_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		},
																		{
																			"key": "episode_number",
																			"value": "-33374586",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "movie",
			"item": [
				{
					"name": "{movie id}",
					"item": [
						{
							"name": "rating",
							"item": [
								{
									"name": "Rate Movie",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"validate response success, status_code and status_message\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(1);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"Success.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": 8.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movie",
												":movie_id",
												"rating"
											],
											"query": [
												{
													"key": "guest_session_id",
													"value": "{{guestSessionId}}"
												},
												{
													"key": "session_id",
													"value": "{{sessionId}}"
												}
											],
											"variable": [
												{
													"key": "movie_id",
													"value": "496243",
													"description": "(Required) "
												}
											]
										},
										"description": "Rate a movie.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": 8.5\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": 8.5\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": 8.5\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Rate Movie Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test.skip(\"status_message is Invalid\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(12);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was updated successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": 8.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movie",
												":movie_id",
												"rating"
											],
											"query": [
												{
													"key": "guest_session_id",
													"value": "{{guestSessionId}}"
												},
												{
													"key": "session_id",
													"value": "{{sessionId}}"
												}
											],
											"variable": [
												{
													"key": "movie_id",
													"value": "496243",
													"description": "(Required) "
												}
											]
										},
										"description": "Rate a movie.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": 8.5\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 1,\n  \"status_message\": \"Success.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": 8.5\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"value\": 8.5\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
										}
									]
								},
								{
									"name": "Delete Rating",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status_message is Invalid\", function () {\r",
													"    pm.expect(pm.response.json().success).to.true;\r",
													"    pm.expect(pm.response.json().status_code).to.eql(13);\r",
													"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was deleted successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "in",
													"value": "query",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id={{guestSessionId}}&session_id={{sessionId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"movie",
												":movie_id",
												"rating"
											],
											"query": [
												{
													"key": "guest_session_id",
													"value": "{{guestSessionId}}"
												},
												{
													"key": "session_id",
													"value": "{{sessionId}}"
												}
											],
											"variable": [
												{
													"key": "movie_id",
													"value": "496243",
													"description": "(Required) "
												}
											]
										},
										"description": "Remove your rating for a movie.\n\nA valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ)."
									},
									"response": [
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": 13,\n  \"status_message\": \"The item/record was deleted successfully.\"\n}"
										},
										{
											"name": "Untitled Example",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "(Required) ",
														"key": "Content-Type",
														"value": "application/json;charset=utf-8"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/movie/:movie_id/rating?guest_session_id=ut cillum laborum eu nostrud&session_id=ut cillum laborum eu nostrud&api_key=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"movie",
														":movie_id",
														"rating"
													],
													"query": [
														{
															"key": "guest_session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "session_id",
															"value": "ut cillum laborum eu nostrud"
														},
														{
															"key": "api_key",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "movie_id",
															"value": "-33374586",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status_code\": -41531582,\n  \"status_message\": \"consectetur commodo laborum\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "list",
			"item": [
				{
					"name": "{list id}",
					"item": [
						{
							"name": "Delete List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Este cenário está com erro e por isso é skipado\r",
											"\r",
											"pm.test.skip(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/list/:list_id?session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id"
									],
									"query": [
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listIdToDelete}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Delete a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Get Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"validate list name\", function () {\r",
											"    pm.expect(pm.response.json().created_by).to.eql(\"GeorgeDuarte87\");\r",
											"    pm.expect(pm.response.json().name).to.eql(\"MyList\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/list/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get the details of a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created_by\": \"travisbell\",\n  \"description\": \"This is pretty wicked.\",\n  \"favorite_count\": 0,\n  \"id\": \"50941077760ee35e1500000c\",\n  \"items\": [\n    {\n      \"poster_path\": \"/fpemzjF623QVTe98pCVlwwtFC5N.jpg\",\n      \"adult\": false,\n      \"overview\": \"A ticking-time-bomb insomniac and a slippery soap salesman channel primal male aggression into a shocking new form of therapy. Their concept catches on, with underground \\\"fight clubs\\\" forming in every town, until an eccentric gets in the way and ignites an out-of-control spiral toward oblivion.\",\n      \"release_date\": \"1999-10-12\",\n      \"original_title\": \"Fight Club\",\n      \"genre_ids\": [\n        18\n      ],\n      \"id\": 550,\n      \"media_type\": \"movie\",\n      \"original_language\": \"en\",\n      \"title\": \"Fight Club\",\n      \"backdrop_path\": null,\n      \"popularity\": 1.5,\n      \"vote_count\": 3439,\n      \"video\": false,\n      \"vote_average\": 7.8\n    }\n  ],\n  \"item_count\": 46,\n  \"iso_639_1\": \"en\",\n  \"name\": \"The Marvel Universe\",\n  \"poster_path\": \"/6KhhINGLbwzylPdRGqu4JxtzAJ3.jpg\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id?api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id"
											],
											"query": [
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Clear List - confirm = false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"validate response success, status_code and status_message\", function () {\r",
											"    pm.expect(pm.response.json().success).to.false;\r",
											"    pm.expect(pm.response.json().status_code).to.eql(29);\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"You must confirm this action: Please provide a confirm=true parameter.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/clear?confirm=false&session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"clear"
									],
									"query": [
										{
											"key": "confirm",
											"value": "false",
											"description": "(Required) "
										},
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": null
										}
									]
								},
								"description": "Clear all of the items from a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/clear?confirm=true&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"clear"
											],
											"query": [
												{
													"key": "confirm",
													"value": "true"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/clear?confirm=true&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"clear"
											],
											"query": [
												{
													"key": "confirm",
													"value": "true"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/clear?confirm=true&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"clear"
											],
											"query": [
												{
													"key": "confirm",
													"value": "true"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Clear List - confirm = true",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"validate response success, status_code and status_message\", function () {\r",
											"    pm.expect(pm.response.json().success).to.true;\r",
											"    pm.expect(pm.response.json().status_code).to.eql(12);\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/clear?confirm=true&session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"clear"
									],
									"query": [
										{
											"key": "confirm",
											"value": "true",
											"description": "(Required) "
										},
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}"
										}
									]
								},
								"description": "Clear all of the items from a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/clear?confirm=true&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"clear"
											],
											"query": [
												{
													"key": "confirm",
													"value": "true"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/clear?confirm=true&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"clear"
											],
											"query": [
												{
													"key": "confirm",
													"value": "true"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/clear?confirm=true&session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"clear"
											],
											"query": [
												{
													"key": "confirm",
													"value": "true"
												},
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Add Movie",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"validate response success, status_code and status_message\", function () {\r",
											"    pm.expect(pm.response.json().success).to.true;\r",
											"    pm.expect(pm.response.json().status_code).to.eql(12);\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"media_id\": 18\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/add_item?session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"add_item"
									],
									"query": [
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Add a movie to a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 18\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/add_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"add_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 18\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/add_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"add_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 18\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/add_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"add_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Add Movie - Duplicated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"validate response success, status_code and status_message\", function () {\r",
											"    pm.expect(pm.response.json().success).to.false;\r",
											"    pm.expect(pm.response.json().status_code).to.eql(8);\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Duplicate entry: The data you tried to submit already exists.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"media_id\": 18\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/add_item?session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"add_item"
									],
									"query": [
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Add a movie to a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 18\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/add_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"add_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 12,\n  \"status_message\": \"The item/record was updated successfully.\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 18\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/add_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"add_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 18\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/add_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"add_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Check Item Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate if item_present is true\", function () {\r",
											"    pm.expect(pm.response.json().item_present).to.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=18",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"item_status"
									],
									"query": [
										{
											"key": "movie_id",
											"value": "18",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "You can use this method to check if a movie has already been added to the list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=56115514&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"item_status"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "56115514"
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"50941077760ee35e1500000c\",\n  \"item_present\": true\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=56115514&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"item_status"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "56115514"
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=56115514&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"item_status"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "56115514"
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Check Item Status is false",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate if item_present is false\", function () {\r",
											"    pm.expect(pm.response.json().item_present).to.false;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=180",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"item_status"
									],
									"query": [
										{
											"key": "movie_id",
											"value": "180",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "You can use this method to check if a movie has already been added to the list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=56115514&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"item_status"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "56115514"
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"50941077760ee35e1500000c\",\n  \"item_present\": true\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=56115514&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"item_status"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "56115514"
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/item_status?movie_id=56115514&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"item_status"
											],
											"query": [
												{
													"key": "movie_id",
													"value": "56115514"
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Remove Movie",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"validate response success, status_code and status_message\", function () {\r",
											"    pm.expect(pm.response.json().success).to.true;\r",
											"    pm.expect(pm.response.json().status_code).to.eql(13);\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was deleted successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"media_id\": 18\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"remove_item"
									],
									"query": [
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Remove a movie from a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 12\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"remove_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 13,\n  \"status_message\": \"The item/record was deleted successfully.\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 12\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"remove_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 12\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"remove_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						},
						{
							"name": "Remove Movie Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"validate response success, status_code and status_message\", function () {\r",
											"    pm.expect(pm.response.json().success).to.false;\r",
											"    pm.expect(pm.response.json().status_code).to.eql(21);\r",
											"    pm.expect(pm.response.json().status_message).to.eql(\"Entry not found: The item you are trying to edit cannot be found.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "query",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"media_id\": 18\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id={{sessionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list",
										":list_id",
										"remove_item"
									],
									"query": [
										{
											"key": "session_id",
											"value": "{{sessionId}}",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "list_id",
											"value": "{{listId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Remove a movie from a list."
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 12\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"remove_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_code\": 13,\n  \"status_message\": \"The item/record was deleted successfully.\"\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 12\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"remove_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								},
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"media_id\": 12\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/list/:list_id/remove_item?session_id=&api_key=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"list",
												":list_id",
												"remove_item"
											],
											"query": [
												{
													"key": "session_id",
													"value": ""
												},
												{
													"key": "api_key",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "list_id",
													"value": "ut cillum laborum eu nostrud",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"listIdToDelete\",  pm.response.json().list_id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"validate response success, status_code and status_message\", function () {\r",
									"    pm.expect(pm.response.json().success).to.true;\r",
									"    pm.expect(pm.response.json().status_code).to.eql(1);\r",
									"    pm.expect(pm.response.json().status_message).to.eql(\"The item/record was created successfully.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomCatchPhrase}}\",\n  \"description\": \"{{$randomCatchPhrase}}\",\n  \"language\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/list?session_id={{sessionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list"
							],
							"query": [
								{
									"key": "session_id",
									"value": "{{sessionId}}",
									"description": "(Required) "
								}
							]
						},
						"description": "Create a list."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"This is my awesome test list.\",\n  \"description\": \"Just an awesome list dawg.\",\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/list?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status_message\": \"The item/record was created successfully.\",\n  \"success\": true,\n  \"status_code\": 1,\n  \"list_id\": 5861\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"This is my awesome test list.\",\n  \"description\": \"Just an awesome list dawg.\",\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/list?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"This is my awesome test list.\",\n  \"description\": \"Just an awesome list dawg.\",\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/list?session_id=&api_key=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"list"
									],
									"query": [
										{
											"key": "session_id",
											"value": ""
										},
										{
											"key": "api_key",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status_message\": \"occaecat magna voluptate\",\n  \"status_code\": -99060594\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.themoviedb.org/3",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "554d0886957b2bb0c97320906a46a448",
			"type": "string"
		},
		{
			"key": "guestSessionId",
			"value": "e1be02565d281bb32cc475bc3ec55ff7"
		},
		{
			"key": "requestToken",
			"value": "5e16e05abb76af8ae84c8500cf3b07f1d52bac20"
		},
		{
			"key": "requestTokenWithLogin",
			"value": "5e16e05abb76af8ae84c8500cf3b07f1d52bac20"
		},
		{
			"key": "sessionId",
			"value": "c4717a3dbc09782be320106fb4ff8bf0607eaa80"
		},
		{
			"key": "accountId",
			"value": "14034806"
		},
		{
			"key": "listId",
			"value": "8213749"
		},
		{
			"key": "listIdToDelete",
			"value": "8214072"
		}
	]
}